#!/usr/bin/php
<?php

/**
 * 
 */

# functions
include_once('functions/functions.php');

# config
include_once('apiConfig.php');

# API caller class
include_once('apiClient.php');


# wrap in try to catch exceptions
try {

	// {{{ Get params
	//
	// Params:
	//	-h/--help
	//	-q %query%
	//		%ipv4/ipv6%	- Get ip details
	//		%CIDR-subnet%	- Get subnet details
	//		%RD:RD%		- Get vrfId details
	//TODO:		AS%%		- Get ASN details
	//		VLAN%vlanId%	- Get vlanId details
	//TODO:		MAC-addr	- Get details by MAC
	//
	$opts = getopts(array(
		'help' => array(
				'switch' => array('h','help'),
				'type' => GETOPT_SWITCH
				),
		'query' => array(
				'switch' => array('q','query'),
				'type' => GETOPT_VAL
				),
	),$argv);

	DbgPrn( $opts, "Opts:\n");

	if (
		$opts['help'] ||
		$opts['query']=='')
	{
		usage ();
		exit (0);
	}
	// }}}

	// {{{ Parse %query%
		//is ip-address?
			if (filter_var($opts['query'], FILTER_VALIDATE_IP)) {
				showIpDetails($opts['query']);
				exit (0);
			}
		// {{{ is subnet?
			$q_subnet = explode ('/',$opts['query']);
			if (sizeof($q_subnet)==2){
			DbgPrn ($q_subnet, 'Q_Subnet:');
				if (
					filter_var($q_subnet[0], FILTER_VALIDATE_IP) &&
					filter_var($q_subnet[1], FILTER_VALIDATE_INT)
				) {
					showSubnetDetails($opts['query']);
					exit (0);
				}
			}
		// }}}
		// {{{ is VRF?
			$q_vrf = explode (':',$opts['query']);
			DbgPrn ($q_vrf, 'Q_VRF:');
			if (sizeof($q_vrf)==2){
				if (
					filter_var($q_vrf[0], FILTER_VALIDATE_INT) &&
					filter_var($q_vrf[1], FILTER_VALIDATE_INT)
				) {
					showVrfDetails($opts['query']);
					exit (0);
				}
			}
		// }}}
		//is VLAN?
			if (filter_var($opts['query'], FILTER_VALIDATE_INT,1)) {
				showVlanDetails($opts['query']);
				exit (0);
			}
	// }}}
}
catch ( Exception $e ) {
	//catch any exceptions and report the problem
/*	print "Error: ".$e->getMessage();
	print "In file: ".$e->getFile();
	print ""*/
	print_r($e);
}

// {{{ Function to get ip details and print it to STDOUT
//
//
function showIpDetails ($ip){

	global $app;
	global $url;

	$req['controller']	= 'Addresses';
	$req['action']		= 'read';
	$req['format']		= 'ip';
	$req['ip']		= $ip;

	DbgPrn( $req, "Request:\n");

	// initialize API caller
	$apicaller = new ApiCaller($app['id'], $app['enc'], $url);

	try {
		// Get Ip-Address Details:
		$details = $apicaller->sendRequest($req);

		include ('templates/ip.php');
		print_r ($ip_info_template);
	}
	catch (Exception $e) {
		$error_msg = $e->getMessage();
		if ($error_msg == 'Address not existed') {
				print "Address $ip not existed in db.\n";
				// try to find subnet
				showSubnetDetails ($ip.'/32');
		}
		else
			print_r($e);
	}
}
// }}}


// {{{ Function to get Subnet details and print it to STDOUT
//
//
function showSubnetDetails ($subnet){

	global $app;
	global $url;

	$req['controller']	= "Subnets";
	$req['action']		= "read";
	$req['format']		= "ip";
	$req['subnet']		= $subnet;

	DbgPrn( $req, "Request:\n");

	// initialize API caller
	$apicaller = new ApiCaller($app['id'], $app['enc'], $url);

	// Get Ip-Address Details:
	$details = $apicaller->sendRequest($req);

	include ('templates/subnet.php');
	print_r ($subnet_info_template);
}
// }}}

// {{{ Function to get VRF details and print it to STDOUT
//
//
function showVRFDetails ($vrfRd){

	global $app;
	global $url;

	$req['controller']	= 'Vrfs';
	$req['action']		= 'read';
	$req['format']		= 'ip';
	$req['rd']		= $vrfRd;

	// initialize API caller
	$apicaller = new ApiCaller($app['id'], $app['enc'], $url);

	// Get Details:
	$details = $apicaller->sendRequest($req);

	include ('templates/vrf.php');
	print_r ($vrf_info_template);

/* TODO:
 * if vrf contain less than 25 subnets, then show list of subnets (CIDRs only).
 *
 *
 */

}
// }}}

// {{{ Function to get Vlan details and print it to STDOUT
//
//
function showVlanDetails ($vlanNumber){

	global $app;
	global $url;

	$req['controller']	= "Vlans";
	$req['action']		= "read";
	$req['format']		= "ip";
	$req['number']		= $vlanNumber;

	DbgPrn( $req, "Request:\n");

	// initialize API caller
	$apicaller = new ApiCaller($app['id'], $app['enc'], $url);

	// Get Details:
	$all_details = $apicaller->sendRequest($req);

	foreach ($all_details as $details) {
		include ('templates/vlan.php');
		echo $vlan_info_template;
	}
}
// }}}


?>